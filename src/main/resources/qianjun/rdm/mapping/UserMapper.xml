<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qianjun.rdm.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="qianjun.rdm.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, password
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="qianjun.rdm.model.User">
		insert into user (id, name, password
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="qianjun.rdm.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="qianjun.rdm.model.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="qianjun.rdm.model.User">
		update user
		set name = #{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
				<!-- 以下自定义查询语句-->
	<select id="selectRoleUser" parameterType="int" resultType="qianjun.rdm.model.RoleUser">
		select * from role_user
		where user_id=#{id}
	</select>
	
	<!-- 与数据库不同的字段的User类 -->
	<!-- column是 select中的字段，property要和User类中的属性名一致，column是User的字段，要传入 "selectRoleUser"中 javaType返回类型-->
	<resultMap type="qianjun.rdm.model.User" id="userResultMap" extends="BaseResultMap">
		<collection property="roleUsers" column="id" javaType="list" select="selectRoleUser"></collection>
	</resultMap>			
	
	<!-- 查询所用用户:N+1条查询，很差 -->
	<select id="getAllUser_bad" resultMap="userResultMap">
		select * from user
	</select>
	
	<!-- 优化上面的查询：一次查询 -->
	<resultMap type="qianjun.rdm.model.User" id="userResultMap2" extends="BaseResultMap">
		<collection property="roleUsers" column="id" javaType="list" ofType="qianjun.rdm.model.RoleUser">
			<id property="id" column="role_user_id"/> <!-- column对应下面的id="getAllUser" select查询字段 -->
			<result property="ruleId" column="rule_id"/>
			<result property="userId" column="user_id"/>
		</collection>
	</resultMap>
	<select id="getAllUser" resultMap="userResultMap2">
		select
			user.id,
			user.name,
			user.password,
			role_user.id as role_user_id,
			role_user.rule_id,
			role_user.user_id
		from
			ssm.user inner join role_user
		ON
			ssm.user.id = role_user.user_id
	</select>	
	
	<!-- 接着上面的 user-role_user-role关联 -->
	<resultMap type="qianjun.rdm.model.User" id="userResultMapRole" extends="BaseResultMap">
		<collection property="roleUsers" column="id" javaType="list" ofType="qianjun.rdm.model.RoleUser">
			<id property="id" column="role_user_id"/> <!-- column对应下面的id="getAllUser" select查询字段 -->
			<result property="ruleId" column="rule_id"/>
			<result property="userId" column="user_id"/>
			
			<association property="role" javaType="qianjun.rdm.model.Role">
				<id property="id" column="role_id"/>
				<result property="right" column="rights"/>
				<result property="url" column="url"/>
			</association>
		</collection>
		<!-- 关联查询 -->
	</resultMap>
	
	<select id="getAllUserWithRole" resultMap="userResultMapRole">
		select
		    user.id,
		    user.name,
		    user.password,
		    role_user.id as role_user_id,
		    role_user.rule_id,
		    role_user.user_id,
		    role.id as role_id,
		    role.rights,
		    role.url
		from
		    ssm.user  join role_user join role
		ON 
			ssm.user.id = role_user.user_id
			and
			role_user.rule_id = role.id
	</select>	
</mapper>